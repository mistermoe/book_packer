1. How would you handle domains beyond Amazon.com?

  handling domains beyond Amazon.com could be handled by adding another class for whatever domain you're wanting to scrape data from into the Scraper module. I'm assuming that there is no uniform pattern among all domains because everyone writes HTML differently. It would be super nice if there was an established convention that could never be broken when structuring HTML, but i'm obviously dreaming. Different scrapers will be required for different domains. This is why created a module for Scrapers alone. If there were methods you wanted to add amongst all scrapers, you could add these within the scraper module.


2. How would you handle products beyond just simply books?

  This is where the Item Module comes into play. I wanted the items used for this coding challenge to be reusable and decoupled entirely from the Amazon scraper. The items are only used as containers, so if you wanted items beyond books or boxes, you could just create a class for the item. Rewriting the initialize method for these items is not needed unless you want to overrite it. All items are meant to inherit from the generic item class.

3. How would you deal with parssing and shipping 2,000,000 books (in a reasonably time frame; e.g., polynomial time) instead of merely 20?

    This was the funnest part of the coding challenge. It intoduced me to the bin-packing problem and i had a lot of fun with it. I had no idea Math PhD's focus their study on just this problem! I used something similar to the first-fit solution. It's not very taxing (regarding speed) but also does not guarantee the least amount of boxes. In fact, it only guarantees 2x the least number of boxes at the very worst. I would want something pretty fast in order to deal with 2,000,000 books.

    I can't help but admit that i'm definitely going to keep working on the bin-packing problem even though i'm done with this coding challenge.

    I've thought of a solution along these lines:

      sort the books from heaviest to lightest. Split the books into 2 piles. Box the heavy pile first. Now on to the light list. For each light book, check to see if it will fit in any of the pre-existing boxes, if not, make a new box. This way i can atleast try to fit the little space left in the boxes that have just enough room left for small books.
